run:
  timeout: "5m"

linters:
  enable:
    - "asciicheck"
    - "bidichk"
    - "copyloopvar"
    - "errorlint"
    - "gocritic"
    - "gofumpt"
    - "goimports"
    - "makezero"
    - "misspell"
    - "nilnesserr"
    - "nolintlint"
    - "perfsprint"
    - "prealloc"
    - "predeclared"
    - "testifylint"
    - "unconvert"
    - "usestdlibvars"
    - "usetesting"
    - "wastedassign"
    - "wrapcheck"

linters-settings:
  goimports:
    # A comma-separated list of prefixes, which, if set, checks import paths
    # with the given prefixes are grouped after 3rd-party packages.
    #
    # Default: ""
    local-prefixes: "github.com/dsh2dsh/go-tinylfu"

  nolintlint:
    # Enable to require an explanation of nonzero length after each nolint
    # directive.
    #
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being
    # suppressed.
    #
    # Default: false
    require-specific: true

  usetesting:
    # Enable/disable `os.Setenv()` detections.
    # Default: false
    os-setenv: true

    # Enable/disable `os.TempDir()` detections.
    # Default: false
    os-temp-dir: true

  wrapcheck:
    # An array of glob patterns which, if any match the package of the function
    # returning the error, will skip wrapcheck analysis for this error. This is
    # useful for broadly ignoring packages and/or subpackages from wrapcheck
    # analysis. There are no defaults for this value.
    ignorePackageGlobs:
     - "github.com/dsh2dsh/go-tinylfu/*"

issues:
  exclude-rules:
    - path: '_test\.go'
      linters:
        - "errcheck"
        - "wrapcheck"
